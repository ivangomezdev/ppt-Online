{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,QCGA,OAAM,UAAa,YAEjB,aAAc,CACZ,KAAK,GAKL,IAAM,EAAS,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,MAAO,GAC1C,EAAM,SAAS,aAAa,CAAC,UAC7B,EAAW,SAAS,aAAa,CAAC,QAGxC,CAAA,EAAI,WAAW,CAAG,IAAI,CAAC,OAAO,CAG1B,AAAgB,aAAhB,IAAI,CAAC,OAAO,CACd,EAAI,gBAAgB,CAAC,QAAS,AAAC,IAC7B,AAAA,EAAA,KAAI,CAAE,aAAa,CAAG,CAAA,EACtB,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,EAAK,YACP,GACyB,cAAhB,IAAI,CAAC,OAAO,EACrB,EAAI,gBAAgB,CAAC,QAAS,AAAC,IAC7B,AAAA,EAAA,KAAI,CAAE,aAAa,CAAG,CAAA,EACtB,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,EAAK,aACL,MAnBiB,mCAmBG,CAClB,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,CACF,GACG,IAAI,CAAC,AAAC,IACN,EAAQ,IAAI,GAAG,IAAI,CAAC,AAAA,IACjB,AAAA,EAAA,KAAI,CAAE,MAAM,CAAG,EAAK,IAAI,CACxB,AAAA,EAAA,KAAI,CAAE,WAAW,CAAG,EAAK,SAAS,AAGpC,EACF,GACC,KAAK,CAAC,AAAC,IACN,QAAQ,GAAG,CAAC,EACd,EACJ,GAIF,EAAS,WAAW,CAAG;AAAvB;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A,AAkBJ,CAAC,CAEG,EAAI,SAAS,CAAC,GAAG,CAAC,cAClB,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,EACrB,CACF,CAGA,eAAe,MAAM,CAAC,aAAc","sources":["<anon>","components/btns.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequireb11a\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequireb11a\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $kOHZq = parcelRequire(\"kOHZq\");\n\nvar $joAEj = parcelRequire(\"joAEj\");\nclass $775ec4e42a40dc2c$var$Btns extends HTMLElement {\n    constructor(){\n        super();\n        //URL Fetch\n        const CREATE__ROOM = \"http://localhost:3000/createRoom\";\n        // Crear shadow root\n        const shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        const btn = document.createElement(\"button\");\n        const btnStyle = document.createElement(\"style\");\n        // Asignar texto al botón (dinámico)\n        btn.textContent = this.btnText;\n        // Escuchar eventos\n        if (this.btnText == \"Join Room\") btn.addEventListener(\"click\", (e)=>{\n            (0, $joAEj.state).createNewRoom = false;\n            (0, $kOHZq.goTo)(\"/joinRoom\");\n        });\n        else if (this.btnText == \"Crear Room\") btn.addEventListener(\"click\", (e)=>{\n            (0, $joAEj.state).createNewRoom = true;\n            (0, $kOHZq.goTo)(\"/joinName\");\n            fetch(CREATE__ROOM, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }).then((resData)=>{\n                resData.json().then((data)=>{\n                    (0, $joAEj.state).roomId = data.dbId;\n                    (0, $joAEj.state).roomLargeId = data.dbIdLarge;\n                });\n            }).catch((err)=>{\n                console.log(err);\n            });\n        });\n        // Estilo del botón\n        btnStyle.textContent = `\r\n      .start__btn {\r\n        width: 320px;\r\n        height: 84px;\r\n        background-color: #006cfc;\r\n        border: solid 5px #001997;\r\n        font-family: \"Odibee Sans\", sans-serif;\r\n        color: #d8fcfc;\r\n        border-radius: 10px;\r\n        font-size: 45px;\r\n        cursor: pointer;\r\n        transition: background-color 0.3s;\r\n        margin-bottom: 10px;\r\n      }\r\n    \r\n      .start__btn:hover {\r\n        background-color: #005bb5;\r\n      };\r\n`;\n        // Aplicar clases y adjuntar al Shadow DOM\n        btn.classList.add(\"start__btn\");\n        shadow.appendChild(btnStyle);\n        shadow.appendChild(btn);\n    }\n}\n// Registrar el Custom Element\ncustomElements.define(\"btn-create\", $775ec4e42a40dc2c$var$Btns);\n\n\n//# sourceMappingURL=index.ce0babb4.js.map\n","import { goTo } from \"../src/index\";\r\nimport { state } from \"../state/state\";\r\n\r\nclass Btns extends HTMLElement {\r\n  btnText: string;\r\n  constructor() {\r\n    super();\r\n\r\n    //URL Fetch\r\n    const CREATE__ROOM = \"http://localhost:3000/createRoom\";\r\n    // Crear shadow root\r\n    const shadow = this.attachShadow({ mode: \"open\" });\r\n    const btn = document.createElement(\"button\");\r\n    const btnStyle = document.createElement(\"style\");\r\n\r\n    // Asignar texto al botón (dinámico)\r\n    btn.textContent = this.btnText;\r\n\r\n    // Escuchar eventos\r\n    if (this.btnText == \"Join Room\") {\r\n      btn.addEventListener(\"click\", (e) => {\r\n        state.createNewRoom = false;\r\n        goTo(\"/joinRoom\");\r\n      });\r\n    } else if (this.btnText == \"Crear Room\") {\r\n      btn.addEventListener(\"click\", (e) => {\r\n        state.createNewRoom = true\r\n        goTo(\"/joinName\");\r\n        fetch(CREATE__ROOM, {\r\n          method: \"POST\", // Método de la petición\r\n          headers: {\r\n            \"Content-Type\": \"application/json\", // Tipo de contenido\r\n          },\r\n        })\r\n          .then((resData) => {\r\n           resData.json().then(data=>{\r\n              state.roomId = data.dbId;\r\n              state.roomLargeId = data.dbIdLarge;\r\n           \r\n              \r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n    }\r\n\r\n    // Estilo del botón\r\n    btnStyle.textContent = `\r\n      .start__btn {\r\n        width: 320px;\r\n        height: 84px;\r\n        background-color: #006cfc;\r\n        border: solid 5px #001997;\r\n        font-family: \"Odibee Sans\", sans-serif;\r\n        color: #d8fcfc;\r\n        border-radius: 10px;\r\n        font-size: 45px;\r\n        cursor: pointer;\r\n        transition: background-color 0.3s;\r\n        margin-bottom: 10px;\r\n      }\r\n    \r\n      .start__btn:hover {\r\n        background-color: #005bb5;\r\n      };\r\n`;\r\n    // Aplicar clases y adjuntar al Shadow DOM\r\n    btn.classList.add(\"start__btn\");\r\n    shadow.appendChild(btnStyle);\r\n    shadow.appendChild(btn);\r\n  }\r\n}\r\n\r\n// Registrar el Custom Element\r\ncustomElements.define(\"btn-create\", Btns);\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$kOHZq","$joAEj","$775ec4e42a40dc2c$var$Btns","HTMLElement","constructor","shadow","attachShadow","mode","btn","document","createElement","btnStyle","textContent","btnText","addEventListener","e","state","createNewRoom","goTo","fetch","method","headers","then","resData","json","data","roomId","dbId","roomLargeId","dbIdLarge","catch","console","log","classList","add","appendChild","customElements","define"],"version":3,"file":"index.ce0babb4.js.map"}
{"mappings":"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","sources":["<anon>","controllers/buttonsController.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequireb11a\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequireb11a\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $gdelx = parcelRequire(\"gdelx\");\n\nvar $eSiuo = parcelRequire(\"eSiuo\");\n\nvar $joAEj = parcelRequire(\"joAEj\");\n\nvar $6SeQg = parcelRequire(\"6SeQg\");\n\nvar $kOHZq = parcelRequire(\"kOHZq\");\n// Llamo a customElement de buttons\nconst $3b9a8d41c0e804a3$var$customElement = document.querySelector(\"game-buttons\");\nconst $3b9a8d41c0e804a3$var$shadowElement = $3b9a8d41c0e804a3$var$customElement?.shadowRoot;\nconst $3b9a8d41c0e804a3$var$imgButton = $3b9a8d41c0e804a3$var$shadowElement?.querySelectorAll(\"img\");\n// Llamo a Root\nconst $3b9a8d41c0e804a3$var$root = document.getElementById(\"root\");\n// Creo styles\nconst $3b9a8d41c0e804a3$var$style = document.createElement(\"style\");\n// Encargado de manejar las opciones\nconst $3b9a8d41c0e804a3$var$handleButtons = ()=>{\n    $3b9a8d41c0e804a3$var$imgButton?.forEach((e)=>{\n        e.addEventListener(\"click\", (event)=>{\n            (0, $joAEj.state).p1Choice = event.target.id;\n            const updates = {\n                choice: event.target.id\n            };\n            const p1Ref = (0, $gdelx.ref)((0, $6SeQg.db), `rooms/${(0, $joAEj.state).roomLargeId}/currentGame/${(0, $joAEj.state).playerId}`);\n            (0, $gdelx.update)(p1Ref, updates);\n            $3b9a8d41c0e804a3$var$disableOtherButtons(e);\n            $3b9a8d41c0e804a3$var$showPcButton();\n        });\n    });\n};\n// Función para deshabilitar otros botones después de hacer una elección\nconst $3b9a8d41c0e804a3$var$disableOtherButtons = (selectedButton)=>{\n    $3b9a8d41c0e804a3$var$imgButton?.forEach((button)=>{\n        if (button !== selectedButton) button.style = \"display:none\";\n    });\n};\nconst $3b9a8d41c0e804a3$var$resetButtons = ()=>{\n    $3b9a8d41c0e804a3$var$imgButton?.forEach((button)=>{\n        button.style = \"\"; // Restablece los estilos predeterminados\n    });\n    $3b9a8d41c0e804a3$var$handleButtons();\n};\n// Si estoy en /howTo activar los botones nuevamente\nconst $3b9a8d41c0e804a3$var$checkRoute = ()=>{\n    const currentPath = window.location.pathname; // ruta actual\n    if (currentPath === \"/howTo\") $3b9a8d41c0e804a3$var$resetButtons();\n};\n// Escuchar cambios en la URL\nwindow.addEventListener(\"popstate\", $3b9a8d41c0e804a3$var$checkRoute);\nwindow.addEventListener(\"pushstate\", $3b9a8d41c0e804a3$var$checkRoute);\nconst $3b9a8d41c0e804a3$var$updateData = ()=>{\n    const p1Ref = (0, $gdelx.ref)((0, $6SeQg.db), `\r\n    rooms/${(0, $joAEj.state).roomLargeId}/currentGame/${(0, $joAEj.state).playerId}`);\n    const updates = {\n        start: false\n    };\n    (0, $gdelx.update)(p1Ref, updates).then(()=>{\n        console.log(\"data OK\");\n    }).catch((error)=>{\n        console.error(\"Error al actualizar el campo:\", error);\n    });\n};\n// Mostrar la elección de p2\nconst $3b9a8d41c0e804a3$var$showPcButton = ()=>{\n    while($3b9a8d41c0e804a3$var$root.firstChild)$3b9a8d41c0e804a3$var$root.removeChild($3b9a8d41c0e804a3$var$root.firstChild);\n    const p2Ref = (0, $gdelx.ref)((0, $6SeQg.db), `rooms/${(0, $joAEj.state).roomLargeId}/currentGame/${(0, $joAEj.state).playerTwoId}`);\n    // Escucha el valor de p2Choice y actualiza el estado\n    (0, $gdelx.onValue)(p2Ref, (snapshot)=>{\n        const p2Choice = snapshot.val()?.choice || \"\"; // Evita valores undefined\n        if (p2Choice !== (0, $joAEj.state).p2Choice) {\n            (0, $joAEj.state).p2Choice = p2Choice;\n            $3b9a8d41c0e804a3$var$updatePcChoiceImage(p2Choice);\n        }\n    });\n};\n// Actualiza la imagen de Player\nconst $3b9a8d41c0e804a3$var$updatePcChoiceImage = (choice)=>{\n    const addPcImage = document.createElement(\"img\");\n    const waitOtherText = document.createElement(\"h3\");\n    waitOtherText.textContent = \"Espera al otro jugador\";\n    $3b9a8d41c0e804a3$var$style.textContent = `\r\n    .pcChoiceSelect {\r\n      width: 80px;\r\n      transform: rotate(180deg);\r\n      margin: 120px auto;\r\n      text-align: center;\r\n      align-items: center;\r\n    }`;\n    addPcImage.classList.add(\"pcChoiceSelect\");\n    $3b9a8d41c0e804a3$var$root.appendChild($3b9a8d41c0e804a3$var$style);\n    // Buscar la imagen correspondiente a la elección de P2\n    for (const element of (0, $eSiuo.images))if (choice === element.id) {\n        addPcImage.src = element[element.id];\n        break;\n    }\n    // Mostrar la imagen\n    if (choice !== \"\") {\n        if ((0, $joAEj.state).p1Choice !== \"\" && (0, $joAEj.state).p2Choice !== \"\") $3b9a8d41c0e804a3$var$root.appendChild(addPcImage);\n        setTimeout(function() {\n            (0, $kOHZq.goTo)(\"/result\");\n            $3b9a8d41c0e804a3$var$updateData();\n        }, 3000);\n    } else if ((0, $joAEj.state).p2Choice == \"\" && choice !== \"\") $3b9a8d41c0e804a3$var$root.appendChild(waitOtherText);\n};\n$3b9a8d41c0e804a3$var$resetButtons();\n\n\n//# sourceMappingURL=index.acacacb3.js.map\n","import { onValue, ref, update } from \"firebase/database\";\r\nimport { images } from \"../components/pptButtons\";\r\nimport { state } from \"../state/state\";\r\nimport { db } from \"../src/firebase.config\";\r\nimport { goTo } from \"../src\";\r\n\r\n// Llamo a customElement de buttons\r\nconst customElement = document.querySelector(\"game-buttons\");\r\nconst shadowElement = customElement?.shadowRoot;\r\nconst imgButton = shadowElement?.querySelectorAll(\"img\");\r\n\r\n// Llamo a Root\r\nconst root = document.getElementById(\"root\") as HTMLElement;\r\n\r\n// Creo styles\r\nconst style = document.createElement(\"style\");\r\n\r\n// Encargado de manejar las opciones\r\nconst handleButtons = () => {\r\n  imgButton?.forEach((e) => {\r\n    e.addEventListener(\"click\", (event: any) => {\r\n      state.p1Choice = event.target.id;\r\n\r\n      const updates = {\r\n        choice: event.target.id,\r\n      };\r\n      const p1Ref = ref(\r\n        db,\r\n        `rooms/${state.roomLargeId}/currentGame/${state.playerId}`\r\n      );\r\n      update(p1Ref, updates);\r\n\r\n      disableOtherButtons(e);\r\n      showPcButton();\r\n    });\r\n  });\r\n};\r\n\r\n// Función para deshabilitar otros botones después de hacer una elección\r\nconst disableOtherButtons = (selectedButton) => {\r\n  imgButton?.forEach((button) => {\r\n    if (button !== selectedButton) {\r\n      button.style = \"display:none\";\r\n    }\r\n  });\r\n};\r\n\r\nconst resetButtons = () => {\r\n  imgButton?.forEach((button) => {\r\n    button.style = \"\"; // Restablece los estilos predeterminados\r\n  });\r\n\r\n  handleButtons();\r\n};\r\n\r\n// Si estoy en /howTo activar los botones nuevamente\r\nconst checkRoute = () => {\r\n  const currentPath = window.location.pathname; // ruta actual\r\n\r\n  if (currentPath === \"/howTo\") {\r\n    resetButtons();\r\n  }\r\n};\r\n\r\n// Escuchar cambios en la URL\r\nwindow.addEventListener(\"popstate\", checkRoute);\r\nwindow.addEventListener(\"pushstate\", checkRoute);\r\n\r\nconst updateData = () => {\r\n  const p1Ref = ref(\r\n    db,\r\n    `\r\n    rooms/${state.roomLargeId}/currentGame/${state.playerId}`\r\n  );\r\n\r\n  const updates = {\r\n    start: false,\r\n  };\r\n\r\n  update(p1Ref, updates)\r\n    .then(() => {\r\n      console.log(\"data OK\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error al actualizar el campo:\", error);\r\n    });\r\n};\r\n\r\n// Mostrar la elección de p2\r\nconst showPcButton = () => {\r\n  while (root.firstChild) {\r\n    root.removeChild(root.firstChild);\r\n  }\r\n\r\n  const p2Ref = ref(\r\n    db,\r\n    `rooms/${state.roomLargeId}/currentGame/${state.playerTwoId}`\r\n  );\r\n\r\n  // Escucha el valor de p2Choice y actualiza el estado\r\n  onValue(p2Ref, (snapshot) => {\r\n    const p2Choice = snapshot.val()?.choice || \"\"; // Evita valores undefined\r\n\r\n    if (p2Choice !== state.p2Choice) {\r\n      state.p2Choice = p2Choice;\r\n      updatePcChoiceImage(p2Choice);\r\n    }\r\n  });\r\n};\r\n\r\n// Actualiza la imagen de Player\r\nconst updatePcChoiceImage = (choice: string) => {\r\n  const addPcImage = document.createElement(\"img\");\r\n  const waitOtherText = document.createElement(\"h3\");\r\n  waitOtherText.textContent = \"Espera al otro jugador\";\r\n\r\n  style.textContent = `\r\n    .pcChoiceSelect {\r\n      width: 80px;\r\n      transform: rotate(180deg);\r\n      margin: 120px auto;\r\n      text-align: center;\r\n      align-items: center;\r\n    }`;\r\n  addPcImage.classList.add(\"pcChoiceSelect\");\r\n  root.appendChild(style);\r\n\r\n  // Buscar la imagen correspondiente a la elección de P2\r\n  for (const element of images) {\r\n    if (choice === element.id) {\r\n      addPcImage.src = element[element.id];\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Mostrar la imagen\r\n  if (choice !== \"\") {\r\n    if (state.p1Choice !== \"\" && state.p2Choice !== \"\") {\r\n      root.appendChild(addPcImage);\r\n    }\r\n   \r\n\r\n    setTimeout(function () {\r\n      goTo(\"/result\");\r\n      \r\n      updateData();\r\n    }, 3000);\r\n  } else if (state.p2Choice == \"\" && choice !== \"\"){\r\n    root.appendChild(waitOtherText);\r\n  }\r\n};\r\n\r\nresetButtons();\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$gdelx","$eSiuo","$joAEj","$6SeQg","$kOHZq","$3b9a8d41c0e804a3$var$customElement","document","querySelector","$3b9a8d41c0e804a3$var$shadowElement","shadowRoot","$3b9a8d41c0e804a3$var$imgButton","querySelectorAll","$3b9a8d41c0e804a3$var$root","getElementById","$3b9a8d41c0e804a3$var$style","createElement","$3b9a8d41c0e804a3$var$handleButtons","forEach","e","addEventListener","event","state","p1Choice","target","updates","choice","p1Ref","ref","db","roomLargeId","playerId","update","$3b9a8d41c0e804a3$var$disableOtherButtons","$3b9a8d41c0e804a3$var$showPcButton","selectedButton","button","style","$3b9a8d41c0e804a3$var$resetButtons","$3b9a8d41c0e804a3$var$checkRoute","window","location","pathname","$3b9a8d41c0e804a3$var$updateData","start","then","console","log","catch","error","firstChild","removeChild","p2Ref","playerTwoId","onValue","snapshot","p2Choice","val","$3b9a8d41c0e804a3$var$updatePcChoiceImage","addPcImage","waitOtherText","element","textContent","classList","add","appendChild","images","src","setTimeout","goTo"],"version":3,"file":"index.acacacb3.js.map"}